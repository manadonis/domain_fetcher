{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/coding/domain_fetcher/client/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport api from '../services/api';\n\n// Auth Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Action Types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  UPDATE_USER: 'UPDATE_USER',\n  SET_LOADING: 'SET_LOADING'\n};\n\n// Initial State\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: true,\n  error: null\n};\n\n// Auth Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Auth Provider Component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Set token in API headers\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Get user data\n          const response = await api.get('/auth/me');\n          dispatch({\n            type: AUTH_ACTIONS.LOGIN_SUCCESS,\n            payload: {\n              user: response.data.user,\n              token\n            }\n          });\n        } catch (error) {\n          console.error('Failed to load user:', error);\n          localStorage.removeItem('token');\n          delete api.defaults.headers.common['Authorization'];\n          dispatch({\n            type: AUTH_ACTIONS.LOGOUT\n          });\n        }\n      }\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    };\n    loadUser();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_START\n    });\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Store token in localStorage\n      localStorage.setItem('token', token);\n\n      // Set token in API headers\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_START\n    });\n    try {\n      const response = await api.post('/auth/register', userData);\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Store token in localStorage\n      localStorage.setItem('token', token);\n\n      // Set token in API headers\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n\n    // Remove token from API headers\n    delete api.defaults.headers.common['Authorization'];\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n  };\n\n  // Update user function\n  const updateUser = async userData => {\n    try {\n      const response = await api.put('/auth/profile', userData);\n      const {\n        user\n      } = response.data;\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: user\n      });\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Update failed';\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Update preferences\n  const updatePreferences = async preferences => {\n    try {\n      const response = await api.put('/auth/preferences', {\n        preferences\n      });\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: {\n          ...state.user,\n          preferences: response.data.preferences\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Preferences update failed';\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await api.post('/auth/change-password', {\n        currentPassword,\n        newPassword\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const errorMessage = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Password change failed';\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Check if user has permission for action\n  const canPerformAction = actionType => {\n    if (!state.user) return false;\n    const limits = {\n      free: {\n        searches: 50,\n        analyses: 10,\n        exports: 2\n      },\n      basic: {\n        searches: 500,\n        analyses: 100,\n        exports: 20\n      },\n      professional: {\n        searches: 5000,\n        analyses: 1000,\n        exports: 100\n      },\n      enterprise: {\n        searches: -1,\n        analyses: -1,\n        exports: -1\n      } // unlimited\n    };\n    const userLimits = limits[state.user.plan] || limits.free;\n    const userUsage = state.user.usage;\n\n    // Check if it's a new month\n    const now = new Date();\n    const lastReset = new Date(userUsage.lastResetDate);\n    if (now.getMonth() !== lastReset.getMonth() || now.getFullYear() !== lastReset.getFullYear()) {\n      // Would need to reset usage on server, for now assume it's handled\n    }\n\n    // Check limits\n    switch (actionType) {\n      case 'search':\n        return userLimits.searches === -1 || userUsage.monthlySearches < userLimits.searches;\n      case 'analysis':\n        return userLimits.analyses === -1 || userUsage.monthlyAnalyses < userLimits.analyses;\n      case 'export':\n        return userLimits.exports === -1 || userUsage.monthlyExports < userLimits.exports;\n      default:\n        return false;\n    }\n  };\n\n  // Get usage stats\n  const getUsageStats = () => {\n    if (!state.user) return null;\n    const limits = {\n      free: {\n        searches: 50,\n        analyses: 10,\n        exports: 2\n      },\n      basic: {\n        searches: 500,\n        analyses: 100,\n        exports: 20\n      },\n      professional: {\n        searches: 5000,\n        analyses: 1000,\n        exports: 100\n      },\n      enterprise: {\n        searches: -1,\n        analyses: -1,\n        exports: -1\n      } // unlimited\n    };\n    const userLimits = limits[state.user.plan] || limits.free;\n    const userUsage = state.user.usage;\n    return {\n      searches: {\n        used: userUsage.monthlySearches,\n        limit: userLimits.searches,\n        percentage: userLimits.searches === -1 ? 0 : userUsage.monthlySearches / userLimits.searches * 100\n      },\n      analyses: {\n        used: userUsage.monthlyAnalyses,\n        limit: userLimits.analyses,\n        percentage: userLimits.analyses === -1 ? 0 : userUsage.monthlyAnalyses / userLimits.analyses * 100\n      },\n      exports: {\n        used: userUsage.monthlyExports,\n        limit: userLimits.exports,\n        percentage: userLimits.exports === -1 ? 0 : userUsage.monthlyExports / userLimits.exports * 100\n      }\n    };\n  };\n\n  // Context value\n  const value = {\n    user: state.user,\n    token: state.token,\n    loading: state.loading,\n    error: state.error,\n    login,\n    register,\n    logout,\n    updateUser,\n    updatePreferences,\n    changePassword,\n    canPerformAction,\n    getUsageStats\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 10\n  }, this);\n};\n\n// Hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","UPDATE_USER","SET_LOADING","initialState","user","token","localStorage","getItem","loading","error","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","loadUser","defaults","headers","common","response","get","data","console","removeItem","login","email","password","post","setItem","success","_error$response","_error$response$data","errorMessage","message","register","userData","_error$response2","_error$response2$data","logout","updateUser","put","_error$response3","_error$response3$data","updatePreferences","preferences","_error$response4","_error$response4$data","changePassword","currentPassword","newPassword","_error$response5","_error$response5$data","canPerformAction","actionType","limits","free","searches","analyses","exports","basic","professional","enterprise","userLimits","plan","userUsage","usage","now","Date","lastReset","lastResetDate","getMonth","getFullYear","monthlySearches","monthlyAnalyses","monthlyExports","getUsageStats","used","limit","percentage","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/Users/rahul/coding/domain_fetcher/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport api from '../services/api';\n\n// Auth Context\nconst AuthContext = createContext();\n\n// Action Types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  UPDATE_USER: 'UPDATE_USER',\n  SET_LOADING: 'SET_LOADING',\n};\n\n// Initial State\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: true,\n  error: null,\n};\n\n// Auth Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: action.payload,\n      };\n\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Auth Provider Component\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n\n      if (token) {\n        try {\n          // Set token in API headers\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Get user data\n          const response = await api.get('/auth/me');\n\n          dispatch({\n            type: AUTH_ACTIONS.LOGIN_SUCCESS,\n            payload: {\n              user: response.data.user,\n              token,\n            },\n          });\n        } catch (error) {\n          console.error('Failed to load user:', error);\n          localStorage.removeItem('token');\n          delete api.defaults.headers.common['Authorization'];\n          dispatch({ type: AUTH_ACTIONS.LOGOUT });\n        }\n      }\n\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n    };\n\n    loadUser();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n\n    try {\n      const response = await api.post('/auth/login', { email, password });\n      const { user, token } = response.data;\n\n      // Store token in localStorage\n      localStorage.setItem('token', token);\n\n      // Set token in API headers\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: { user, token },\n      });\n\n      return { success: true, user };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Login failed';\n\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    dispatch({ type: AUTH_ACTIONS.REGISTER_START });\n\n    try {\n      const response = await api.post('/auth/register', userData);\n      const { user, token } = response.data;\n\n      // Store token in localStorage\n      localStorage.setItem('token', token);\n\n      // Set token in API headers\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: { user, token },\n      });\n\n      return { success: true, user };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Registration failed';\n\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: errorMessage,\n      });\n\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n\n    // Remove token from API headers\n    delete api.defaults.headers.common['Authorization'];\n\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\n  };\n\n  // Update user function\n  const updateUser = async (userData) => {\n    try {\n      const response = await api.put('/auth/profile', userData);\n      const { user } = response.data;\n\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: user,\n      });\n\n      return { success: true, user };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Update failed';\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Update preferences\n  const updatePreferences = async (preferences) => {\n    try {\n      const response = await api.put('/auth/preferences', { preferences });\n\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: {\n          ...state.user,\n          preferences: response.data.preferences,\n        },\n      });\n\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Preferences update failed';\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await api.post('/auth/change-password', {\n        currentPassword,\n        newPassword,\n      });\n\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Password change failed';\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Check if user has permission for action\n  const canPerformAction = (actionType) => {\n    if (!state.user) return false;\n\n    const limits = {\n      free: { searches: 50, analyses: 10, exports: 2 },\n      basic: { searches: 500, analyses: 100, exports: 20 },\n      professional: { searches: 5000, analyses: 1000, exports: 100 },\n      enterprise: { searches: -1, analyses: -1, exports: -1 }, // unlimited\n    };\n\n    const userLimits = limits[state.user.plan] || limits.free;\n    const userUsage = state.user.usage;\n\n    // Check if it's a new month\n    const now = new Date();\n    const lastReset = new Date(userUsage.lastResetDate);\n\n    if (now.getMonth() !== lastReset.getMonth() || now.getFullYear() !== lastReset.getFullYear()) {\n      // Would need to reset usage on server, for now assume it's handled\n    }\n\n    // Check limits\n    switch (actionType) {\n      case 'search':\n        return userLimits.searches === -1 || userUsage.monthlySearches < userLimits.searches;\n      case 'analysis':\n        return userLimits.analyses === -1 || userUsage.monthlyAnalyses < userLimits.analyses;\n      case 'export':\n        return userLimits.exports === -1 || userUsage.monthlyExports < userLimits.exports;\n      default:\n        return false;\n    }\n  };\n\n  // Get usage stats\n  const getUsageStats = () => {\n    if (!state.user) return null;\n\n    const limits = {\n      free: { searches: 50, analyses: 10, exports: 2 },\n      basic: { searches: 500, analyses: 100, exports: 20 },\n      professional: { searches: 5000, analyses: 1000, exports: 100 },\n      enterprise: { searches: -1, analyses: -1, exports: -1 }, // unlimited\n    };\n\n    const userLimits = limits[state.user.plan] || limits.free;\n    const userUsage = state.user.usage;\n\n    return {\n      searches: {\n        used: userUsage.monthlySearches,\n        limit: userLimits.searches,\n        percentage: userLimits.searches === -1 ? 0 : (userUsage.monthlySearches / userLimits.searches) * 100,\n      },\n      analyses: {\n        used: userUsage.monthlyAnalyses,\n        limit: userLimits.analyses,\n        percentage: userLimits.analyses === -1 ? 0 : (userUsage.monthlyAnalyses / userLimits.analyses) * 100,\n      },\n      exports: {\n        used: userUsage.monthlyExports,\n        limit: userLimits.exports,\n        percentage: userLimits.exports === -1 ? 0 : (userUsage.monthlyExports / userLimits.exports) * 100,\n      },\n    };\n  };\n\n  // Context value\n  const value = {\n    user: state.user,\n    token: state.token,\n    loading: state.loading,\n    error: state.error,\n    login,\n    register,\n    logout,\n    updateUser,\n    updatePreferences,\n    changePassword,\n    canPerformAction,\n    getUsageStats,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\n// Hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}