version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/domain_intelligence
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_change_in_production}
      - FRONTEND_URL=http://localhost:5000
    depends_on:
      - mongo
      - redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - domain-network

  # MongoDB database
  mongo:
    image: mongo:6.0
    environment:
      - MONGO_INITDB_DATABASE=domain_intelligence
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    restart: unless-stopped
    networks:
      - domain-network

  # Redis cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - domain-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - domain-network

volumes:
  mongo_data:
  redis_data:

networks:
  domain-network:
    driver: bridge